<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nightingale – Documentation</title>
    <link>/en/en/docs/</link>
    <description>Recent content in Documentation on Nightingale</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/en/en/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>En: Community</title>
      <link>/en/en/docs/community/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/community/</guid>
      <description>
        
        
        &lt;h2 id=&#34;welcome-nightingale&#34;&gt;Welcome Nightingale&lt;/h2&gt;
&lt;p&gt;Nightingale is a set of Internet monitoring solutions derived from &lt;a href=&#34;http://www.open-falcon.com/&#34;&gt;Open-Falcon&lt;/a&gt;. It incorporates Didi&amp;rsquo;s best engineering practices. We have made a lot of improvements and optimizations, and the product is no longer compatible with Open-Falcon smoothly，so we separated this project.&lt;/p&gt;
&lt;p&gt;The first line of code of Open-Falcon was written in 2014. Over the past few years, there are more than 200 commercial companies using it in production. We are also gradually optimizing it. Nightingale is a very subversive version, have been made substantial improvements in performance, ease of use, usability, and Didi has resisted 770 million monitoring indicators (including physical machines, virtual machines, containers, networks, and business modules). This is a new journey, and I look forward to working with developers to make the best of monitor area.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/didi/nightingale&#34;&gt;-&amp;gt; star with supports:-)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;the-team-of-nightingale&#34;&gt;The team of Nightingale&lt;/h3&gt;
&lt;p&gt;Team members：&lt;a href=&#34;https://github.com/ulricqin&#34;&gt;ulricqin&lt;/a&gt; &lt;a href=&#34;https://github.com/710leo&#34;&gt;710leo&lt;/a&gt; &lt;a href=&#34;https://github.com/jsers&#34;&gt;jsers&lt;/a&gt; &lt;a href=&#34;https://github.com/hujter&#34;&gt;hujter&lt;/a&gt; &lt;a href=&#34;https://github.com/n4mine&#34;&gt;n4mine&lt;/a&gt; &lt;a href=&#34;https://github.com/heli567&#34;&gt;heli567&lt;/a&gt;，Thank you for your efforts.&lt;/p&gt;
&lt;h3 id=&#34;contact-us&#34;&gt;Contact us&lt;/h3&gt;
&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-invite.png&#34; width=&#34;150&#34; alt=&#34;n9e&#34;/&gt;
&lt;h3 id=&#34;help-and-communication&#34;&gt;Help and communication&lt;/h3&gt;
&lt;p&gt;Add the WeChat of Nightingale&amp;rsquo;s assistant, and the assistant will pull into the assistance group.&lt;/p&gt;
&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-invite.png&#34; width=&#34;150&#34; alt=&#34;n9e-helper&#34;/&gt;
&lt;h3 id=&#34;business-support&#34;&gt;Business support&lt;/h3&gt;
&lt;p&gt;For the operation and maintenance system platform, we have a full set of commercial solutions, and the commercial version of the monitoring system will be more powerful. If your company needs support from a professional team, please contact us：&lt;a href=&#34;mailto:nightingale@didiglobal.com&#34;&gt;nightingale@didiglobal.com&lt;/a&gt; :-)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/ecmc-img/screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/ecmc-img/event-his.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>En: Introduction</title>
      <link>/en/en/docs/intro/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;nightingale-introduction&#34;&gt;Nightingale introduction&lt;/h2&gt;
&lt;p&gt;This section gives a brief introduction to Nightingale, so that you can have a preliminary intuitive feeling for the system and prepare for a deeper understanding.&lt;/p&gt;
&lt;h3 id=&#34;nightingale-system-interface&#34;&gt;Nightingale system interface&lt;/h3&gt;
&lt;p&gt;Looking directly at the system interface is the most intuitive way to understand the system. Here are a few pictures to give everyone a preliminary understanding.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-tree.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The picture above is the object page under the node. The object refers to the target monitoring object, usually refers to the machine. This tree is called the service tree. From top to bottom, it is described as the organizational structure relationship, product service module relationship, engine room and machine mounting relationship. This is a grouping mechanism for machines. This tree supports flexible customization. When the actual monitoring strategy is configured, it is necessary to configure different alarm strategies for different machines with different purposes. Therefore, a flexible machine grouping mechanism is very important.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-stra.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The above picture is the monitoring strategy configuration page. The strategies in the list are all applied to the didi.storage node. Therefore, all the machines mounted on all child nodes under this node will apply this strategy. Any machine that reaches the relevant threshold will trigger an alarm. It is super convenient. :-)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The customization of the monitoring dashboard has been greatly improved in terms of ease of use. It supports chart thresholds and chart classification. New charts and sorting management are all visible and what you get. Customizing the inspection dashboard is no longer difficult.&lt;/p&gt;
&lt;h3 id=&#34;similarities-and-differences-with-open-falcon&#34;&gt;Similarities and differences with Open-Falcon&lt;/h3&gt;
&lt;p&gt;Since Nightingale has a deep relationship with Open-Falcon, it is certain that everyone will be more interested in the similarities and differences between each other. Overall, the concept has a strong continuity, and the improvement in architecture and product experience is huge.&lt;/p&gt;
&lt;h4 id=&#34;differences-from-open-falcon&#34;&gt;Differences from Open-Falcon&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Alarm engine was refactored to push-pull combination mode，The push mode ensures the efficiency of policy judgments, and the pull mode supports nodata alarms. Remove the original nodata components to simplify the difficulty of system deployment&lt;/li&gt;
&lt;li&gt;Introduced service tree, hierarchically manage the endpoint, remove the original flat HostGroup, and remove the alarm template at the same time. The alarm strategy is directly bound to the service tree node, greatly improving flexibility and ease of use.&lt;/li&gt;
&lt;li&gt;Remove the original database-based index library, change to the memory mode, and use an index module to process the index alone, avoiding the embarrassment of the original MySQL single expression to the billion level, and the efficiency of the index is greatly improved after the memory-based index.&lt;/li&gt;
&lt;li&gt;Storage module &lt;code&gt;Graph&lt;/code&gt; introduced Facebook&amp;rsquo;s Gorilla, which is the memory TSDB. The data of the last few hours is stored in memory by default, which greatly improves the efficiency of data query. The hard disk storage method still uses rrdtool.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;judge&lt;/code&gt; module of the alarm engine achieves automatic fault removal through the heartbeat mechanism, and there is no need to worry about the failure of a single judge to cause some strategies to fail. The index module uses a similar method to ensure system availability.&lt;/li&gt;
&lt;li&gt;The client has built-in log matching index extraction capability. The web page supports the configuration of log matching rules, and also supports the way to read the configuration file in the specific directory of the target machine, making business index monitoring easier to use.&lt;/li&gt;
&lt;li&gt;The portal (api in falcon-plus), uic, dashboard, hbs, and alarm are combined into a module called monapi, which simplifies the overall system deployment difficulty, and the original inter-module call becomes an in-process method call, with better stability.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;similarities-with-open-falcon&#34;&gt;Similarities with Open-Falcon&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The data model remains consistent, and it is still the organization of metric, endpoint, and tags, so the agent can be reused. The agent in Nightingale is called collector, which combines the logic of the original Open-Falcon agent and falcon-log-agent, and various monitoring plugins can also be reused.&lt;/li&gt;
&lt;li&gt;The data flow and processing logic of Nightingale and Open-Falcon are similar, and still use a flexible push model, which is divided into two links for data storage and alarm judgment. In the next section, we will explain in detail based on the architecture diagram.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;nightingale-architecture-overview&#34;&gt;Nightingale architecture overview&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://s3-gz01.didistatic.com/n9e-pub/image/n9e-arch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;collector&lt;/code&gt; is an agent, which can collect common indicators of the machine, support log monitoring, plug-in mechanism, and business can directly report data through the API interface.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Transfer&lt;/code&gt; provides an rpc interface to receive the data reported by the collector, and then pass the data through a consistent hash algorithm, and then forward it to multiple tsdb and multiple judges.&lt;/li&gt;
&lt;li&gt;Tsdb-The original graph component, used to store historical data, supports configuration in double-write mode, which improves the system&amp;rsquo;s disaster tolerance. At the same time, tsdb will forward a copy of monitoring data to index.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Index&lt;/code&gt; is an index module, replaces the original mysql program. The &lt;code&gt;index&lt;/code&gt; builds an index in memory, facilitates data retrieval, and greatly improves performance.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Judge&lt;/code&gt; is an alarm engine. Judge synchronizes monitoring strategies from monapi (portal), and then makes alarm judgments by the received data. If the threshold is reached, an alarm event is generated and pushed to redis.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Monapi&lt;/code&gt; (alarm) reads the event generated by the judge from redis, then performing secondary processing, adding some meta information, generating an alarm message, and pushes back to redis finally.&lt;/li&gt;
&lt;li&gt;Multiple sending components, such as mail-sender, sms-sender, etc., read alarm messages from redis, send alarms, and extract various senders to facilitate customization.&lt;/li&gt;
&lt;li&gt;Monapi integrates the functions of the original multiple modules and provides APIs for front-end calls. The api prefix is ​​&lt;code&gt;/api /portal&lt;/code&gt;. We use transfer to query data. The original query component is removed. The api prefix is&lt;code&gt; /api /transfer&lt;/code&gt; The api prefix of the query is &lt;code&gt;/api /index&lt;/code&gt;, so using nginx, you can forward the request to different backends through different locations.&lt;/li&gt;
&lt;li&gt;The database still is mysql, and the main storage contents include: user information, team information, tree node information, alarm strategy, monitoring dashboard, shieldding strategy, collection strategy, heartbeat information of some components, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;For more information，the video may be helpful：&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-arch-intro.mp4&#34;&gt;Nightingale architecture overview&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;nightingale-roadmap&#34;&gt;Nightingale Roadmap&lt;/h3&gt;
&lt;p&gt;1、Provide monitoring index aggregation components. The current architecture can solve the machine-level and module-level monitoring, but the cluster-level monitoring indicators need to aggregate the indicators of all modules and machines in the entire cluster and do some operations such as summing and averaging. We already have some related components, but it will take time to release.&lt;/p&gt;
&lt;p&gt;2、Support container monitoring, combine with Prometheus, or directly collect cadvisor data. There is no specific plan now and we will continue our efforts in this aspect.&lt;/p&gt;
&lt;p&gt;3、Improve and support more monitoring plugins. Many plugins of the Open-Falcon community can be used directly. We will try to add plugins that the community does not have. For plugins that have been out of repair in the community, we will reorganize them to make Nightingale&amp;rsquo;s surroundings more complete.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>En: Installation</title>
      <link>/en/en/docs/install/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/install/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>En: Usage</title>
      <link>/en/en/docs/usage/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/usage/</guid>
      <description>
        
        
        &lt;p&gt;We recorded a small video for quick start, it is recommended to take a look first:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-001.mp4&#34;&gt;Quick Start of Nightingale Platform (1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-002.mp4&#34;&gt;Quick Start of Nightingale Platform (2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>En: Plugin</title>
      <link>/en/en/docs/plugin/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/plugin/</guid>
      <description>
        
        
        &lt;p&gt;The plug-in mechanism of Nightingale is similar to Open-Falcon, and the data structure is also compatible, so the plugin part can be found in &lt;a href=&#34;http://book.open-falcon.com/zh_0_2/usage/&#34;&gt;Open-Falcon&lt;/a&gt;，If you find that some plugins cannot be used, please contact us, we will reorganize and maintain them.&lt;/p&gt;
&lt;p&gt;Many plugins of Open-Falcon start a process directly or use CRON driver, and then push data to open-falcon-agent. If using Nightingale, push the address to the address of the collector, ie http://127.0.0.1:2058/api/collector/push.&lt;/p&gt;
&lt;h4 id=&#34;win-collectorhttpsgithubcomn9ewin-collector&#34;&gt;&lt;a href=&#34;https://github.com/n9e/win-collector&#34;&gt;win-collector&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Collector for windows&lt;/p&gt;
&lt;h4 id=&#34;swcollectorhttpsgithubcomgaochao1swcollector&#34;&gt;&lt;a href=&#34;https://github.com/gaochao1/swcollector&#34;&gt;swcollector&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Collecting switch indicators&lt;/p&gt;
&lt;h4 id=&#34;mymonhttpsgithubcomn9emymon&#34;&gt;&lt;a href=&#34;https://github.com/n9e/mymon&#34;&gt;mymon&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For mysql monitoring&lt;/p&gt;
&lt;h4 id=&#34;jmxmonhttpsgithubcomtoomanyopenfilesjmxmon&#34;&gt;&lt;a href=&#34;https://github.com/toomanyopenfiles/jmxmon&#34;&gt;jmxmon&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For jvm information collecting&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>En: Operation</title>
      <link>/en/en/docs/operation/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/operation/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>En: API</title>
      <link>/en/en/docs/api/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/api/</guid>
      <description>
        
        
        &lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;
&lt;p&gt;1、The return of all interfaces is in the following format, the error message will be written into the &lt;code&gt;err&lt;/code&gt; field, and the status code is all 200, unless the server fails.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;err&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;error msg&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2、The relevant interfaces of &lt;code&gt;/api /portal&lt;/code&gt; will be authenticated, using the basic auth method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For example, using curl can be tested like this:&lt;/span&gt;
curl -u root:1234 localhost/api/portal/self/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the above example, it is assumed that the root account (password 1234) is used for testing. In the actual production environment, we can create several virtual accounts with permissions set to root, and use these virtual accounts as the authentication account of the caller.&lt;/p&gt;
&lt;p&gt;3、There will be an nginx in front of each module of Nightingale, so the address of all interfaces is the nginx address by default. If you want to directly call the back-end module, it is also possible to pay attention to load balancing and failure retry.&lt;/p&gt;
&lt;p&gt;4、For monapi related interfaces, you can refer to the file: &lt;code&gt;src /modules /monapi /http /routes /routes.go&lt;/code&gt;，This file defines the path of all interfaces and the corresponding implementation method. If you feel that the interface is not enough or want to add some interfaces, you can submit a PR:-) The interface for querying index data is provided by the index module, the api path starts with &lt;code&gt;/api /index&lt;/code&gt;, the interface for querying historical monitoring data is provided by the transfer module, and the api path starts with&lt;code&gt; /api /transfer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Below we will introduce some important interfaces. For other interfaces, please refer to the source code directly. After all, the code is not deceptive.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>En: FAQ</title>
      <link>/en/en/docs/faq/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/faq/</guid>
      <description>
        
        
        &lt;h3 id=&#34;preface&#34;&gt;Preface&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;This section assumes that the Nightingale deployment directory is /home /n9e&lt;/li&gt;
&lt;li&gt;First watch [Video Tutorial] (../appendix /# heading)&lt;/li&gt;
&lt;li&gt;After installation, if it does not meet expectations, it is recommended that you first go to the logs directory and check all logs to see if there are any errors.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>En: Appendix</title>
      <link>/en/en/docs/appendix/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/en/docs/appendix/</guid>
      <description>
        
        
        &lt;h2 id=&#34;video-tutorial&#34;&gt;Video tutorial&lt;/h2&gt;
&lt;p&gt;The related video is as follows, please be sure to watch it before asking questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-arch-intro.mp4&#34;&gt;Nightingale&amp;rsquo;s overall structure explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-install-didiyun.mp4&#34;&gt;Quick installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-install-src.mp4&#34;&gt;Source installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-install-collector.mp4&#34;&gt;collector deployed separately&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-001.mp4&#34;&gt;Quick Start for Nightingale Platform(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-002.mp4&#34;&gt;Quick Start for Nightingale Platform(2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-address.mp4&#34;&gt;Explain address.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s3-gz01.didistatic.com/n9e-pub/video/n9e-usage-identity.mp4&#34;&gt;Explain identity Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;alarm-sending&#34;&gt;Alarm sending&lt;/h2&gt;
&lt;p&gt;The concept of Nightingale is that sending alarm events to redis and  no longer managed. Next, various senders read the events in redis and send them out. After all, there are too many ways to send alarms. I hope that developers in the community can work together.&lt;/p&gt;
&lt;p&gt;Here are some typical alarm sending components for reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/n9e/mail-sender&#34;&gt;mail-sender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/n9e/wechat-sender&#34;&gt;wechat-sender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/n9e/dingtalk-sender&#34;&gt;dingtalk-sender&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
